# Build stage
FROM node:18-alpine AS builder
WORKDIR /app

# Add build argument with default value
ARG SKIP_TESTS=false
ENV SKIP_TESTS=$SKIP_TESTS

# Copy package files
COPY package*.json ./

# Install all dependencies including devDependencies
# Use npm ci if package-lock.json exists, otherwise use npm install
RUN if [ -f package-lock.json ]; then \
      npm ci; \
    else \
      npm install; \
    fi

# Copy source code
COPY . .

# Run tests only if SKIP_TESTS is not 'true'
RUN if [ "$SKIP_TESTS" != "true" ]; then \
      echo "Running tests..."; \
      npm test -- --verbose; \
    else \
      echo "Skipping tests as SKIP_TESTS is set to true"; \
    fi

# Build the app
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy built assets from builder
COPY --from=builder /app/build /usr/share/nginx/html
# Copy nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]